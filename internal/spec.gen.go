// Package internal provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/pseudo-su/oapi-ui-codegen DO NOT EDIT.
package internal

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8xVT2/jthP9KoP5/Q4toFjObtGDTk23C9RA2w3Q3LY5TKSxxK1EMsORE8PQdy9IyX9W",
	"sTct0AJ7skVST/PevMfZYek67yxbDVjsMJQNd5T+vhdxEv94cZ5FDafl0lUcf9dOOlIs0Fh9+wYz1K3n",
	"8ZFrFhwy7DgEqtPpaTOoGFvjMGQo/Ngb4QqLjyPm8fz9Acw9fOJSI9Yt68taTDWv5PvvzlZiqTtXRoZK",
	"9evlmQoniAuVjcUod+nP/4XXWOD/8qO0+aRrHmkMBxASoS0O8XvGrt0or1UqE1fuyLRY7Jd+qF1Ltr4K",
	"LBtT8pVy51tSXpSu29dX4IVDmGEvEaw22vQP8Z3cB+4rdxX6/NJLQ4YVh1KMV+MsFnjXmAAmAFngZ+p8",
	"y/DBs725XUHwXII66AMDBSAQXrOwLRmeGrYQlESNrYHAi4viQR/i8z+p6A+LGbamZBtSPyfSv67ukqpG",
	"2/j4+xPVNQvEzqiTSH7DEkYK14vlYhlPO8+WvMEC36alDD1pkzqY+6mn9ei6z0X4xQQFalvQhiGdTGBC",
	"cX9VYYGtCXo7bngS6lhZAhYf50g/uyfoyG4heSeqJ6y9WCAFZxnUdAzfdPQM18vltxhdggU+9izbY8db",
	"0xnFbIru34rmcB8NHryzYQzSm+Vybz62iTJ535oyUco/hVjt7uQLr1g8jJ7+nOwNeKq5gmR6cOu9dA1T",
	"leTZ4fOV5eczit9Aa+yfUZ8oeTyTsCLIkcapAvM8j9WsqW/1X+M53o9niPaWnz2XyhXwdCbD0HcdyfbU",
	"PhN/pTp6A9Pj/ZChd+GMBu+ESTmmh/WF4cq0eZt2Zo29fgn1W9+2B+HwK5JmxnGmzJCNwcx3nnVVDRcD",
	"urJrB2snQOlWMmtTnlWt5pjSH7er6rWg3jUMpop+mzI/ZVUMb3ify3h9HGOZasTTQaLS85dM+h+H8lw/",
	"3u+7sf9w5EWwodbEtceeg35NBrnc2blX4mssm/PtfNeLsFX4yXVk7GE2Xpo6+eYah2wO8kEbljlEo+pD",
	"kee7Kq0PX4LMcENi6KEd2z2+Mbp5UhvJm8U0aKcxP+ufVRYo+6CugxEg3ZIk9dTw3UlhRZ7yE0fiIowz",
	"cmFcYnd/UPDF3ZsGnbF1mk+Vgyejzf7uOno94HA//BUAAP//r2m3Ok4KAAA=",
}

// GetOpenAPISpec returns the Swagger specification corresponding to the generated code
// in this file.
func GetOpenAPISpec() (*openapi3.T, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewLoader().LoadFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
