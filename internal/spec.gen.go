// Package internal provides primitives to interact the openapi HTTP API.
//
// Code generated by github.com/pseudo-su/oapi-ui-codegen DO NOT EDIT.
package internal

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/getkin/kin-openapi/openapi3"
	"strings"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/8xVy27jRhD8lUEnhwSgRXk3yIG3ZGMgAvJYIHtb+NBLtsjZzMs9TVmCwH8PZoa0HUmO",
	"EyAL+CRyHtVV1dXiEVpvg3fkJEJzhNgOZDE/3jB7Tg+BfSAWTXm59R2l361niwINaCdv30AFcghUXqkn",
	"hqkCSzFin0/Pm1FYux6mqQKmu1EzddB8LJiP528fwPynz9RKwnpPcs5Fd6dMvv/uIhOH9hKNCgT7l+np",
	"DmaIZ5gVMkI2P3zNtIUGvqofra1nX+skY3oAQWY8wJTqabf16bLRLbmYyRbS8OvmQ76ixaTXP+6x74lV",
	"Kiuek2874qi9gwauV+vVOp32gRwGDQ28zUsVBJQh06vDTLgvliZDUbR3mw4aMDpKVpRuMFoS4gjNxyN0",
	"FFvWQUqln/29sugOKstW4hWTjOwUivKOlGhL6huLe3W9Xn8LSSA0cDcSHxYzUzGrBao5df8qVdNt6k0M",
	"3sWSgTfrdYmlE3JZEIZgdJsl1Z9jYnt8UuGF7sTSjr+L/UEF7KlTuV/Kb1UoDg2EXbbnCPsrR/tc/vSq",
	"0e7P5I8MpNKZjJVAHmU8deA0ioXNFkcj/5vOMtoXhI6O9oFaoU7RfKaCOFqLfIAGftFRFBqz6BfsUzYg",
	"v95OFQQfL2SqZUKhOVUnzbs+t+y30ZgHc+AVyX+XdShM8s/VT1UZrfoYSDbd9OyIxcHfvyf58bDpXpqy",
	"DwMp3aWwpPQEknnQWNOOlqFKk/04U7k4PP0DEx7pnxL2hSfqktE3i81L4aQL1Q6NTmt3I0V5TZ3fuK1X",
	"W88KVQzU6q1unwlBuka8W9o5soEG6t4bdP1V2tEtXQnZYFCo3l3DKZN3IzM5UT95i9rBVC0gg0iITV0f",
	"u7wz/RfQ32UgXiAr2CFr/GRKuwtcGcPZbcCgV7RHGwytWm/P8G6cEKt2jOKtKgD5Lw65nxv+lHVT58FI",
	"X6tVLJ+vlfaJ53Q7/RUAAP//uu7TF4IIAAA=",
}

// GetOpenAPISpec returns the Swagger specification corresponding to the generated code
// in this file.
func GetOpenAPISpec() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}
